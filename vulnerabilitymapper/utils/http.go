package utils

import (
	"bytes"
	"errors"
	"fmt"
	"io"
	"net/http"
	"time"

	log "github.com/sirupsen/logrus"
)

const InjestAPI = "https://deepfence-fetcher:8006/df-api/ingest?doc_type=cve"

func callAPI(postReader io.Reader, urlPath string) error {
	// Send  data to cve server, which will put it in a redis pub-sub read by logstash
	retryCount := 0
	httpClient := &http.Client{}
	for {
		httpReq, err := http.NewRequest("POST", urlPath, postReader)
		if err != nil {
			return err
		}
		httpReq.Close = true
		resp, err := httpClient.Do(httpReq)
		if err != nil {
			return err
		}
		if resp.StatusCode == 200 {
			resp.Body.Close()
			break
		} else {
			if retryCount > 2 {
				errMsg := fmt.Sprintf("Unable to complete request. Got %d ", resp.StatusCode)
				resp.Body.Close()
				return errors.New(errMsg)
			}
			resp.Body.Close()
			retryCount += 1
			time.Sleep(5 * time.Second)
		}
	}
	return nil
}

func Injest(s string) error {
	if s == "" {
		return nil
	}
	log.Info("sending scan result to cve server")
	postReader := bytes.NewReader([]byte(s))
	return callAPI(postReader, InjestAPI)
}
