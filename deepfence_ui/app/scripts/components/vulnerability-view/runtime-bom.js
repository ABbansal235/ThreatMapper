/* eslint-disable */
import React, { useEffect } from 'react';
import { DfTableV2 } from '../common/df-table-v2';


import { getRuntimeBomAction } from '../../actions/app-actions';
import { useDispatch, useSelector } from 'react-redux';



export const RuntimeBom = () => {

const dispatch = useDispatch();

useEffect(() => {
  dispatch(getRuntimeBomAction());
}, []);

const runtimeBomData = useSelector(state => state.get('runtime_bom')) || []; 


const tableData = runtimeBomData.data || [];


const renderSubComponent = (rowInfo) => {
    return (
        <DfTableV2
        data={rowInfo.row.original.hosts}
        noDataText='No rows found'
        renderRowSubComponent={(row) => renderProcessSubComponent(row)}
        columns={[
            {
              Header: 'Host name',
              accessor: 'host_name',
              maxWidth: 200,
        }]}/>
    )
}


const renderProcessSubComponent = (rowInfo) => {
  return (
    <DfTableV2
        data={rowInfo.row.original.processes}
        showPagination
        noDataText='No rows found'
        columns={[
            {
              Header: 'Process name',
              accessor: 'process_name',
              maxWidth: 200,
        }, {
            Header: 'Process ID',
            accessor: 'pid',
            maxwidth: 200
        }, 
        {
          Header: 'Container Name',
          accessor: 'container_name',
          maxwidth: 200
        },{
          Header: 'Type',
          accessor: 'type',
          maxWidth: 200
        }
      ]}/>
  )
}



return (
    <div className="">
        <div className="">
          <div className="report">
          </div>
          <div className="table severity-report-table">
          <DfTableV2
          data={tableData}
          showPagination
          totalRows={30}
          defaultPageSize={20}
          noDataText='No rows found'
          renderRowSubComponent={(row) => renderSubComponent(row)}
          columns={[
            {
              Header: 'File Path',
              accessor: 'filepath',
              maxWidth: 200,
            },
            {
                Header: 'Vulnerability Status',
                accessor: 'vulnerability_status',
                Cell: cell => (
                  <div className={`${cell.value}-severity`}>
                    {cell.value}
                  </div>
                ),
                maxWidth: 50,
            },
          ]}
        />   
          </div>
        </div>
      </div>
)

}
