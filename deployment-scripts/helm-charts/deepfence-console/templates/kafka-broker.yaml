{{- if (eq "deepfence-kafka-broker:9092" .Values.db.kafka.broker) }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: deepfence-kafka-broker
  labels:
    app: deepfence-console
    {{- include "deepfence-console.labels" . | nindent 4 }}
    name: deepfence-kafka-broker
  namespace: {{ .Values.namespace }}
spec:
  serviceName: deepfence-kafka-broker
  replicas: {{ .Values.kafkaBrokerReplicas }}
  selector:
    matchLabels:
      name: deepfence-kafka-broker
  template:
    metadata:
      labels:
        name: deepfence-kafka-broker
        app: deepfence-console
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: name
                      operator: In
                      values:
                        - deepfence-kafka-broker
                topologyKey: kubernetes.io/hostname
              weight: 1
{{- if .Values.topologyNodeAffinityHostName }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: NotIn
                    values:
                      - "{{ .Values.topologyNodeAffinityHostName }}"
{{- end }}
      initContainers:
        - name: init
          image: busybox
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          command:  ["/bin/chmod","-R","777", "/data"]
          volumeMounts:
            - name: deepfence-kafka-data
              mountPath: /data
      containers:
        - name: kafka
          image: "{{ .Values.image.repository }}deepfence_kafka_broker_ce:{{ .Values.image.tag }}"
          # imagePullPolicy: {{ .Values.image.pullPolicy }}
          imagePullPolicy: Always
          ports:
            - containerPort: 9092
            - containerPort: 9093
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: REPLICAS
              value: "{{ .Values.kafkaBrokerReplicas }}"
            - name: SERVICE
              value: deepfence-kafka-broker
            - name: KAFKA_LOG_DIRS
              value: /data/kafka
            - name: STORAGE_UUID
              value: {{ .Values.db.kafka.storageUUID }}
          # livenessProbe:
          #   tcpSocket:
          #     port: 9092
          #   initialDelaySeconds: 180
          #   periodSeconds: 30
          # readinessProbe:
          #   tcpSocket:
          #     port: 9092
          #   initialDelaySeconds: 30
          #   periodSeconds: 30
          resources:
            requests:
              cpu: {{ .Values.kafkaBrokerResources.requests.cpu }}
              memory: {{ .Values.kafkaBrokerResources.requests.memory }}
            limits:
              cpu: {{ .Values.kafkaBrokerResources.limits.cpu }}
              memory: {{ .Values.kafkaBrokerResources.limits.memory }}
          volumeMounts:
            - name: deepfence-kafka-data
              mountPath: /data
      imagePullSecrets:
        - name: {{ .Values.image.pullSecretName }}
  volumeClaimTemplates:
    - metadata:
        name: deepfence-kafka-data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "{{ .Values.volume.kafkaStorage }}"
        storageClassName: {{ .Values.volume.storageClass }}
---
apiVersion: v1
kind: Service
metadata:
  name: deepfence-kafka-broker
  labels:
    app: deepfence-console
    {{- include "deepfence-console.labels" . | nindent 4 }}
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    name: deepfence-kafka-broker
  ports:
    - name: '9092'
      port: 9092
      protocol: TCP
      targetPort: 9092
    - name: '9093'
      port: 9093
      protocol: TCP
      targetPort: 9093
---
{{- end }}